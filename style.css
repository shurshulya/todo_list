@font-face {
    font-family: 'Inter Bold';
    src: url(./fonts/Inter_18pt-Regular.woff2);
    font-style: normal;
    font-weight: 700;
    font-display: swap;
}

@font-face {
    font-family: 'Inter Medium';
    src: url(./fonts/Inter_18pt-Medium.woff2);
    font-style: normal;
    font-weight: 500;
    font-display: swap;
}

@font-face {
    font-family: 'Inter Regular';
    src: url(./fonts/Inter_18pt-Regular.woff2);
    font-style: normal;
    font-weight: 400;
    font-display: swap;
}

/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
 :where([fill]:not(
   [fill="none"],
   [fill^="url"]
 )) {
   fill: currentColor;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }

 :root {
    --color-black: #353644;
    --color-gray: #A3A3B9;
    --color-green: #54C1AD;
    --color-yellow: #FDBF46;
    --color-white: #FEFEFB;
    --color-red: #F06A6D;
    --color-blue: #5B6097;

    --container-width: 1240px;
    --container-padding-x: 15px;

    --font-family-base-bold: 'Inter Bold', sans-serif;
    --font-family-base-medium: 'Inter Medium', sans-serif;
    --font-family-base-regular: 'Inter Regular', sans-serif;
 }

 .container {
    margin-left: auto;
    margin-right: auto;
    max-width: calc(var(--container-width) + var(--container-padding-x)*2);;
 }

.button {
    border: none;
    border-radius: 50px;
    font-family: var(--font-family-base-bold);
    font-size: 700;
    font-size: 16px;
}

.button.black-button{
    border: 1px solid var(--color-gray);
    color: var(--color-black);
    padding-left: 10px;
}

.button.green-active {
    background-color: var(--color-green);
    color: var(--color-white);
    text-transform: lowercase;
}

.button.yellow-pending{
    background-color: var(--color-yellow);
    color: var(--color-white);
    text-transform: lowercase;
}

.button.red-closed{
    background-color: var(--color-red);
    color: var(--color-white);
    text-transform: lowercase;
}

.button.blue-add{
    background-color: var(--color-blue);
    color: var(--color-white);
    text-transform: lowercase;
}

.header {
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.header-logo {
    margin-top: 10px;
}

.header-logo-img{
    width: 180px;
    height: 70px;
}

.section-input {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.header-information-task-list{
    display: flex;
    flex-direction: row;
    gap: 24px;
}

.task {
    width: 400px;
    height: 50px;
}

.start-date, .end-date {
    width: 135px;
    height: 50px;
}

.end-date {
    margin-right: 24px;
}

.information-task-status-list{
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 24px;
}

.status-is-active, 
.partition-active-button{
    width: 90px;
    height: 45px;
}

.status-is-pending,
.partition-pending-button {
    width: 110px;
    height: 45px;
}

.status-is-closed, 
.partition-closed-button {
    width: 100px;
    height: 45px;
}

.status-is-active:focus,
.status-is-closed:focus,
.status-is-pending:focus {
  width: 115px;
  height: 50px;
}

.status-add{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 115px;
    height: 50px;
}

.status-add::before {
    content: '';
    display: inline-block;
    width: 20px;
    aspect-ratio: 1;
    margin-right: 10px;
    background: url(./icons/plus.svg) center / cover no-repeat;
}

.main {
    display: flex;
    flex-direction: column;
    margin-top: 10px;
}

.section-todo-list-active,
.section-todo-list-pending,
.section-todo-list-closed {
    margin-top: 20px;
}

.partition-active-button,
.partition-pending-button,
.partition-closed-button {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    margin-bottom: 20px;
}

.partition-active-button::after,
.partition-pending-button::after,
.partition-closed-button::after {
    content: '';
    position: absolute;
    left: 0;
    height: 1px;
    background: var(--color-gray);
    width: 1225px;
    z-index: -1;
}

/* Вот эти стили добавятся когда буду добавлять с js задания | вниз см */

.main-active-task-list{
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.main-background-task-item{
    display: grid;
    width: 1225px;
    height: 60px;
    margin-bottom: 10px;
}

.center{
    display: grid;
    justify-items: center;
}

.main-task-list{
    display: grid;
    align-items: center;
    grid-template-columns: 5fr 3fr 3fr 2fr 1fr 1fr;
    font-family: var(--font-family-base-medium);
    font-weight: 500;
    font-size: 16px;
    color: var(--color-black);
}

.main-task-status-button {
    width: 80px;
    height: 35px;
}

.main-edit-item-img{
    border: none;
    background: url(./icons/edit-icon.svg) center / cover no-repeat;
    width: 24px;
    height: 24px;
}

.main-trash-item-img{
    border: none;
    background: url(./icons/trash-icon.svg) center / cover no-repeat;
    width: 24px;
    aspect-ratio: 1;
}

.main-task-name{
    position: relative;
    display: flex;
    align-items: center;
}

.main-task-name::before{
    content: '';
    display: inline-block;
    background: var(--color-gray);
    width: 20px;
    height: 20px;
    border-radius: 50%;
    margin-right: 10px;
}

.main-task-name::after{
    content: '';
    display: inline-block;
    position: absolute;
    left: 5px;
    background: var(--color-white);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 10px;
}

/* Вот эти стили добавятся когда буду добавлять с js задания | вверх см */

.main-menu-list-active,
.main-menu-list-pending,
.main-menu-list-closed {
    display: grid;
    width: 1225px;
    align-items: center;
    grid-template-columns: 5fr 3fr 3fr 2fr 1fr 1fr;
    font-family: var(--font-family-base-regular);
    font-weight: 400;
    font-size: 16px;
    color: var(--color-gray);
    margin-bottom: 15px;
}

.main-menu-start-item{
    display: grid;
    justify-items: center;
    grid-column-start: 2;
    grid-column-end: 3;
}

.main-menu-end-item{
    display: grid;
    justify-items: center;
    grid-column-start: 3;
    grid-column-end: 4;
}

.main-menu-status-item{
    display: grid;
    justify-items: center;
    grid-column-start: 4;
    grid-column-end: 5;
}

/* Класс ниже чтобы скрывать main-menu-list когда нет заданий */
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    white-space: nowrap;
    clip-path: inset(100%);
    clip: rect(0 0 0 0);
    overflow: hidden;
  }

